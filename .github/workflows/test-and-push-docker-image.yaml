name: Run tests and push Docker image on success

"on":
  push:
    branches: [main]
  pull_request:

jobs:
  test-js:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [8.x, 10.x, 12.x]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install JavaScript dependencies
        run: npm install

      - name: Run JavaScript tests
        run: npm run test -- --coverage --collectCoverage=true

  test-and-push-docker:
    runs-on: [self-hosted, ecr]
    needs: [test-js]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Context for Buildx
        id: buildx-context
        run: docker context create builders

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest
          endpoint: builders

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: eu-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Run Python tests (docker-compose)
        run: |
          touch .env  # empty .env file to avoid error
          docker-compose run \
            -e DJANGO_SETTINGS_MODULE=controlpanel.settings.test \
            -e KUBECONFIG=tests/kubeconfig \
            cpanel \
            sh -c "until pg_isready -h db; do sleep 2; done; pytest"

      # Set tags automaticlly based on repository events
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ${{ steps.login-ecr.outputs.registry }}/control-panel

      - name: Build and Push
        uses: docker/build-push-action@v2
        with:
          file: Dockerfile
          platforms: linux/amd64
          push: false
          load: true
          tags: ${{ steps.docker_meta.outputs.tags }}
