# Generated by Django 5.2.4 on 2025-09-29 15:53

from django.db import migrations


def migrate_cloud_platform_arns(apps, schema_editor):
    """
    Migrate existing cloud_platform_role_arn values to CloudPlatformRole objects.
    """
    App = apps.get_model("api", "App")
    CloudPlatformRole = apps.get_model("api", "CloudPlatformRole")

    # Find all apps that have a cloud_platform_role_arn value
    apps_with_arns = App.objects.exclude(cloud_platform_role_arn="")

    for app in apps_with_arns:
        # Create a CloudPlatformRole object for each existing ARN
        CloudPlatformRole.objects.get_or_create(
            app=app,
            arn=app.cloud_platform_role_arn,
            defaults={"description": "Migrated from legacy cloud_platform_role_arn field"},
        )


def reverse_migrate_cloud_platform_arns(apps, schema_editor):
    """
    Reverse migration: move CloudPlatformRole ARNs back to App.cloud_platform_role_arn field.
    Only migrates the first ARN if multiple exist for an app.
    """
    App = apps.get_model("api", "App")
    CloudPlatformRole = apps.get_model("api", "CloudPlatformRole")

    for app in App.objects.all():
        # Get the first CloudPlatformRole for this app (if any)
        first_role = CloudPlatformRole.objects.filter(app=app).first()
        if first_role:
            app.cloud_platform_role_arn = first_role.arn
            app.save()

        # Delete all CloudPlatformRole objects for this app
        CloudPlatformRole.objects.filter(app=app).delete()


class Migration(migrations.Migration):

    dependencies = [
        ("api", "0066_cloudplatformrole"),
    ]

    operations = [
        migrations.RunPython(
            code=migrate_cloud_platform_arns, reverse_code=reverse_migrate_cloud_platform_arns
        ),
    ]
